// Generated by CoffeeScript 1.7.1
(function() {
  var Connection, DEFAULT_CONNECT, DEFAULT_PROTO, VERBOSE, log, randomString, util, zmq, _, _ref;

  zmq = require('zmq');

  util = require('util');

  _ = require('underscore');

  _ref = require('./helpers'), log = _ref.log, randomString = _ref.randomString;

  VERBOSE = false;

  DEFAULT_PROTO = 'tcp';

  DEFAULT_CONNECT = 'localhost';

  module.exports = Connection = (function() {
    Connection.prototype.pending_responses = {};

    function Connection(options) {
      if (options == null) {
        options = {};
      }
      _.extend(this, options);
      this.id || (this.id = randomString());
      this.proto || (this.proto = DEFAULT_PROTO);
      this.host || (this.host = DEFAULT_CONNECT);
      this.address = this.proto + '://' + this.host + ':' + this.port;
      this.connect();
    }

    Connection.prototype.connect = function() {
      this.socket = zmq.socket('dealer');
      this.socket.identity = this.id;
      this.socket.connect(this.address);
      this.socket.on('message', (function(_this) {
        return function(message_json) {
          return _this.handleMessage(JSON.parse(message_json));
        };
      })(this));
      return log("Socket " + this.id + " connected to " + this.address + "...");
    };

    Connection.prototype.handleMessage = function(message) {
      var on_response;
      if (VERBOSE) {
        log(">: " + (util.inspect(message)));
      }
      if (on_response = this.pending_responses[message.id]) {
        return on_response(null, message);
      }
    };

    Connection.prototype.send = function(message, on_response) {
      message.id = randomString(16);
      this.socket.send(JSON.stringify(message));
      if (on_response != null) {
        this.pending_responses[message.id] = on_response;
      }
      return message;
    };

    Connection.prototype.close = function() {
      return this.socket.close();
    };

    return Connection;

  })();

}).call(this);
