// Generated by CoffeeScript 1.7.1
(function() {
  var ConsulAgent, DEFAULT_BASE_URL, VERBOSE, async, log, request, util, _;

  async = require('async');

  request = require('request');

  util = require('util');

  log = require('./helpers').log;

  _ = require('underscore');

  VERBOSE = false;

  DEFAULT_BASE_URL = 'http://localhost:8500/v1';

  ConsulAgent = function(options) {
    this.options = options != null ? options : {};
    this.setDefaults();
    return this;
  };

  ConsulAgent.prototype.setDefaults = function() {
    if (this.options.base_url == null) {
      return this.options.base_url = DEFAULT_BASE_URL;
    }
  };

  ConsulAgent.prototype.apiRequest = function(method, path, data, cb) {
    var request_options;
    if (cb == null) {
      cb = data;
      data = null;
    }
    request_options = {
      url: this.options.base_url + path,
      method: method,
      json: true,
      body: data
    };
    return request(request_options, function(err, res, data) {
      if (VERBOSE) {
        log.d('[apiRequest] Response status: ' + res.statusCode);
      }
      if (cb != null) {
        return cb(err, data);
      }
    });
  };

  ConsulAgent.prototype.getNodes = function(cb) {
    return this.apiRequest('GET', '/catalog/nodes', cb);
  };

  ConsulAgent.prototype.getServices = function(cb) {
    return this.apiRequest('GET', '/catalog/services', cb);
  };

  ConsulAgent.prototype.getServiceNodes = function(service_id, cb) {
    return this.apiRequest('GET', '/catalog/service/' + service_id, cb);
  };

  ConsulAgent.prototype.registerService = function(service, cb) {
    return this.apiRequest('PUT', '/agent/service/register', service, cb);
  };

  ConsulAgent.prototype.deregisterService = function(service_id, cb) {
    return this.apiRequest('DELETE', '/agent/service/deregister/' + service_id, cb);
  };

  ConsulAgent.prototype.getAllServiceNodes = function(cb) {
    var all_service_nodes, self;
    all_service_nodes = {};
    self = this;
    return self.getServices(function(err, services) {
      return async.map(_.keys(services), function(service_id, _cb) {
        return self.getServiceNodes(service_id, function(err, service_nodes) {
          all_service_nodes[service_id] = service_nodes;
          return _cb();
        });
      }, function() {
        return cb(null, all_service_nodes);
      });
    });
  };

  module.exports = ConsulAgent;

}).call(this);
