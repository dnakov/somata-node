// Generated by CoffeeScript 1.7.1
(function() {
  var ConsulAgent, Service, VERBOSE, helpers, log, os, util, zerorpc, _;

  os = require('os');

  util = require('util');

  zerorpc = require('zerorpc');

  helpers = require('./helpers');

  _ = require('underscore');

  ConsulAgent = require('./consul-agent');

  log = helpers.log;

  VERBOSE = false;

  Service = (function() {
    function Service(name, methods, options) {
      this.name = name;
      this.methods = methods != null ? methods : {};
      if (options == null) {
        options = {};
      }
      this.protocol = options.protocol || 'tcp';
      this.port = options.port || helpers.randomPort();
      this.consul_agent = new ConsulAgent;
      this.service_binding = new zerorpc.Server(this.methods);
      this.bind();
      this.register();
      process.on('SIGINT', (function(_this) {
        return function() {
          return _this.deregister(function() {
            return process.exit();
          });
        };
      })(this));
    }

    Service.prototype.bind = function() {
      return this.service_binding.bind(helpers.makeBindingAddress(this.protocol, this.port));
    };

    Service.prototype.register = function(cb) {
      return this.consul_agent.registerService({
        Name: this.name,
        Port: this.port,
        Tags: ["protocol:" + this.protocol]
      }, (function(_this) {
        return function(err, registered) {
          log.s("Registered `" + _this.name + "` on :" + _this.port);
          if (cb != null) {
            return cb(null, registered);
          }
        };
      })(this));
    };

    Service.prototype.deregister = function(cb) {
      return this.consul_agent.deregisterService(this.name, (function(_this) {
        return function(err, deregistered) {
          log.e("Deregistered `" + _this.name + "` from :" + _this.port);
          if (cb != null) {
            return cb(null, deregistered);
          }
        };
      })(this));
    };

    return Service;

  })();

  module.exports = Service;

}).call(this);
